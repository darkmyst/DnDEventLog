<Window x:Class="DnDEventLog.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:DnDEventLog"
        Title="SimpleInit" Height="450" Grid.IsSharedSizeScope="True" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:InitiativeAndEventTrackerViewModel x:Key="ViewModel" />
        <DataTemplate x:Key="ActorInitiativeTemplate" DataType="local:Actor">
            <Border x:Name="actorRoot" BorderThickness="0.5" BorderBrush="#A000" Padding="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="ActorInitiativeListNameInitEnabled" />
                        <ColumnDefinition SharedSizeGroup="ActorInitiativeListEffects" />
                        <ColumnDefinition SharedSizeGroup="ActorInitiativeListNotes" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock x:Name="NameLBL" Text="{Binding Name}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="2,0"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                        <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay}" VerticalAlignment="Center" Margin="2,0" />
                        <TextBlock Text="{Binding Initiative}" VerticalAlignment="Center" Margin="2,0" />
                    </StackPanel>
                    <UniformGrid Rows="1" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top">
                        <Button Content="Edit" Command="{Binding EditActorCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding}" Margin="2" Focusable="False" />
                        <Button Content="Delete" Command="{Binding DeleteActorCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding}" Margin="2" Focusable="False" />
                        <ToggleButton x:Name="btnDelay" Content="Delay" IsChecked="{Binding IsDelayed, Mode=TwoWay}" Margin="2" Focusable="False" />
                    </UniformGrid>
                    <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" VerticalAlignment="Center">
                        <ItemsControl x:Name="EffectsIC" ItemsSource="{Binding Effects}" />
                    </Border>
                    <TextBlock Text="{Binding Notes}" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"  VerticalAlignment="Center" MaxHeight="100">
                        <TextBlock.ToolTip>
                            <ToolTip MaxWidth="300">
                                <TextBlock Text="{Binding Notes}" TextWrapping="Wrap" />
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsPlayer}" Value="True">
                    <Setter TargetName="NameLBL" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="NameLBL" Property="FontSize" Value="14" />
                    <Setter TargetName="actorRoot" Property="Background" Value="#1000FF00" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPlayer}" Value="False">
                    <Setter TargetName="actorRoot" Property="Background" Value="#10FF0000" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasInitiative}" Value="False" />
                        <Condition Binding="{Binding IsDelayed}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="btnDelay" Property="Visibility" Value="Hidden" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasInitiative}" Value="True" />
                        <Condition Binding="{Binding IsDelayed}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="actorRoot" Property="Background" Value="Yellow" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsDelayed}" Value="True">
                    <Setter TargetName="actorRoot" Property="Background" Value="#CCE" />
                    <Setter TargetName="btnDelay" Property="Content" Value="Delayed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                    <Setter TargetName="actorRoot" Property="Background" Value="#DDD" />
                    <Setter TargetName="NameLBL" Property="Foreground" Value="#A00" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <Grid DataContext="{Binding Source={StaticResource ViewModel}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <UniformGrid Rows="1">
                <Label HorizontalAlignment="Center" Content="Current Round" />
                <Label HorizontalAlignment="Center" Content="Current Initiative" />
            </UniformGrid>
            <UniformGrid Rows="1">
                <Label HorizontalAlignment="Center" Content="{Binding CurrentRound}" />
                <Label HorizontalAlignment="Center" Content="{Binding CurrentInitiative}" />
            </UniformGrid>
            <UniformGrid Rows="1">
                <Button Command="{Binding AddActorCommand}" Content="Add Actor" Margin="2" Focusable="False" />
                <Button Command="{Binding NextInitiativeCommand}" Content="Next Init" IsDefault="True" Margin="2" Focusable="False"  />
                <Button Command="{Binding ResetCombatCommand}" Content="Reset Combat" Margin="2" Focusable="False"  />
            </UniformGrid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" SharedSizeGroup="ActorInitiativeListNameInitEnabled" />
                    <ColumnDefinition Width="250" SharedSizeGroup="ActorInitiativeListEffects" />
                    <ColumnDefinition Width="300" SharedSizeGroup="ActorInitiativeListNotes" />
                </Grid.ColumnDefinitions>
                <Label Content="Name / Initiative" Grid.Column="0" />
                <Label Content="Effects" Grid.Column="1" />
                <Label Content="Notes" Grid.Column="2" />
            </Grid>
        </StackPanel>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="1">
            <ItemsControl ItemsSource="{Binding ActorsView}" ItemTemplate="{StaticResource ActorInitiativeTemplate}" />
        </ScrollViewer>
    </Grid>
</Window>
